package Middle.找出游戏的获胜者;public class FindWinner {    // 约瑟夫问题    /*        最后的胜利者在最后的索引一定是0。        假设前一轮的位置是pos，那么当前的位置就是 (pos+m)%当前人数        因为索引是从0开始的，那么假设我们要除掉从当前索引0开始的第k个人，那么索引为k的人一定是可以活下来的     */    public int findTheWinner(int n, int k) {        if(n<=1) return n;        int f = 0;        for (int i=2; i<=n; i++){            f = (f+k)%i;        }        return f+1;    }    // 模拟删除 O(k*n*n)    public int findTheWinner2(int n, int k){        if(n<=1) return n;        boolean[] vis = new boolean[n];        int cnt = 0;  // 已经删除的人数        int cur = -1;  // 当前位置        while (cnt!=n-1){            for (int i=1; i<=k; i++){  // 往后移动k位                cur++;                while (vis[cur]) cur = (cur+1)%n;            }            vis[cur]=true;            cnt++;        }        // 找到那个没被删除的        for (int i=0; i<n; i++){            if (!vis[i]) cur = i;        }        return cur+1;    }}